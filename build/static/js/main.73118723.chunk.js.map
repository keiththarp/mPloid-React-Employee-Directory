{"version":3,"sources":["utils/API.ts","components/EmployeeGrid/index.tsx","components/SearchBar/index.tsx","views/directory.tsx","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API","getEmployeeData","axios","get","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useStyles","makeStyles","theme","createStyles","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","EmployeeGrid","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","slice","row","hover","tabIndex","first","last","email","phone","location","style","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","SearchBar","TextField","onChange","handleInputChange","type","variant","Directory","state","employeeArray","currentSearchArray","currentSearchTerm","searchTerm","toLowerCase","setState","filter","includes","then","res","employeeDetails","data","results","name","city","photo","picture","thumbnail","catch","err","console","log","this","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73118723.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Get the object off employee data\n\nconst API = {\n  getEmployeeData: () => {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n\nexport default API;","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport EmployeeData from \"../../utils/employeeData\";\n\ninterface Data {\n  id: string;\n  first: string;\n  last: string;\n  email: string;\n  phone: string;\n  location: string;\n  photo: string;\n}\n\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  // { id: 'photo', numeric: false, disablePadding: true, label: '' },\n  { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\n  { id: 'first', numeric: false, disablePadding: false, label: 'First Name' },\n  { id: 'last', numeric: false, disablePadding: false, label: 'Last Name' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'location', numeric: false, disablePadding: false, label: 'Location' },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align='center'\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\nexport default function EmployeeGrid(props: any) {\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('last');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const rows = props.rows;\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size='small'\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.id}\n                    >\n                      {/* <TableCell align=\"center\">{<img src={row.photo} alt={`${row.first} ${row.last}`} width=\"50\" height=\"50\" />}</TableCell> */}\n\n                      <TableCell align=\"center\">{row.id}</TableCell>\n                      <TableCell align=\"center\">{row.first}</TableCell>\n                      <TableCell align=\"center\">{row.last}</TableCell>\n                      <TableCell align=\"center\">{row.email}</TableCell>\n                      <TableCell align=\"center\">{row.phone}</TableCell>\n                      <TableCell align=\"center\">{row.location}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (35) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n// import useDebounce from '../../utils/useDebounce'\n\nexport default function SearchBar(props: any) {\n\n  return (\n    <div>\n      <form>\n        <TextField onChange={props.handleInputChange} id=\"outlined-search\" label=\"Search Last Name\" type=\"search\" variant=\"outlined\" />\n      </form>\n    </div>\n  )\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport EmployeeGrid from \"../components/EmployeeGrid/index\"\nimport SearchBar from \"../components/SearchBar\";\n\ninterface IEmployee {\n  id: string;\n  first: string;\n  last: string;\n  email: string;\n  phone: string;\n  location: string;\n  photo: string;\n};\n\ninterface IState {\n  employeeArray: IEmployee[];\n  currentSearchArray: IEmployee[];\n  currentSearchTerm: string;\n}\n\nclass Directory extends Component {\n\n  state: IState = {\n    employeeArray: [],\n    currentSearchArray: [],\n    currentSearchTerm: \"\",\n  }\n\n  componentDidMount() {\n    API.getEmployeeData()\n      .then(res => {\n        const employeeDetails = res.data.results.map(function (el: any): IEmployee {\n          return {\n            id: el.id.value,\n            first: el.name.first,\n            last: el.name.last,\n            email: el.email,\n            phone: el.phone,\n            location: `${el.location.city}, ${el.location.state}`,\n            photo: el.picture.thumbnail,\n          }\n        })\n        this.setState({\n          employeeArray: employeeDetails,\n          currentSearchArray: employeeDetails\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // const debounce = useDebounce(currentSearchTerm, 500);\n\n  handleInputChange = (event: any) => {\n    const searchTerm: string = event.target.value.toLowerCase();\n    this.setState({\n      currentSearchArray: this.state.employeeArray.filter((el) => (\n        el.last.toLowerCase().includes(searchTerm)\n      ))\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        < SearchBar handleInputChange={this.handleInputChange} />\n        < EmployeeGrid rows={this.state.currentSearchArray} />\n      </div>\n    );\n  }\n\n};\n\nexport default Directory;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <span>mPloid Employee Directory App</span>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Directory from './views/directory';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <Directory />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}